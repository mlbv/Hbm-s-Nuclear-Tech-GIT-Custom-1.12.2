buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net/" }
        maven { url = "https://files.minecraftforge.net/maven" }
        mavenCentral()
        maven {
    // location of the maven that hosts JEI files
    name = "Progwml6 maven"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
  maven {
    // location of a maven mirror for JEI files, as a fallback
    name = "ModMaven"
    url = "https://modmaven.k-4u.nl"
  }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '2.0.2'
group = 'com.hbm' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'NTM-Extended-1.12.2'

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.fork = true
    options.incremental = true
    options.encoding = 'UTF-8'
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'stable', version: '39-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven { // CraftTweaker
        name = "jared maven"
        url = "http://maven.blamejared.com/"
    }
    /*offline
    maven { //GC
        name = "galacticraft"
        url = "https://maven.galacticraft.net/repository/legacy/"
    }
    */
    maven { //  baubles
        name = "mcmoddev"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        url = "https://maven.cleanroommc.com"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    annotationProcessor 'org.ow2.asm:asm-debug-all:5.2'
    annotationProcessor 'com.google.guava:guava:32.1.2-jre'
    annotationProcessor 'com.google.code.gson:gson:2.8.9'
    implementation ('zone.rong:mixinbooter:9.3') {
        transitive = false
    }
    annotationProcessor ('zone.rong:mixinbooter:9.3') {
        transitive = false
    }
    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // compile "li.cil.oc:OpenComputers:MC1.12.2-1.7.+:api" 
    compileOnly files("libs/OpenComputers-MC1.12.2-1.8.5+179e1c3.jar")

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // compile against the JEI API but do not include it at runtime
    compileOnly files("libs/jei_1.12.2-${version_jei}-api.jar")
    // at runtime, use the full JEI jar
    runtimeOnly files("libs/jei_1.12.2-${version_jei}.jar")

    //compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    //runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    compileOnly files("libs/CraftTweaker2-1.12-${version_crafttweaker}.jar")
    compileOnly files("libs/groovyscript-1.1.3.jar")
    compileOnly files("libs/galacticraft-legacy-${version_gc}.jar")
    compileOnly files("libs/Baubles-${version_baubles}.jar")
    compileOnly files("libs/RedstoneFlux-1.12-${version_redstoneflux}-universal.jar")
    compileOnly files("libs/buildcraft-all-7.99.24.8.jar")
    compileOnly files("libs/InventoryTweaks-1.64+dev.151.jar")
    compileOnly files("libs/Mekanism-Community-Edition-1.12.2-9.12.10.jar")
    // compileOnly files("libs/TConstruct-1.12.2-2.13.0.183.jar")
    // compileOnly files("libs/Mantle-1.12-1.3.3.55.jar")
    compileOnly files("libs/Future-MC-0.2.20.jar")
    compileOnly files("libs/ImmersiveEngineering-0.12-98.jar")
    compileOnly files("libs/Xaeros_Minimap_24.3.0_Forge_1.12.jar")
    compileOnly files("libs/lucky-block-forge-1.12.2-2.0.jar")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}